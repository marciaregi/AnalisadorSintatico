/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analisador_lexico;

/**
 *
 * @author Regina
 */
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author wendel
 */
public class TelaGerador extends javax.swing.JFrame {

    /**
     * Creates new form TelaGerador
     */
    JFileChooser file;
    String textoFonte = "";

    public TelaGerador() {
        initComponents();
       
        txtSaida.setEditable(false);
        btnAnalisar.setEnabled(false);
        btnGerar.setEnabled(true);
        txtEntrada.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEntrada = new javax.swing.JTextArea();
        btnAnalisar = new javax.swing.JButton();
        btnGerar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSaida = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel1.setText("Analisador léxico");

        txtEntrada.setColumns(20);
        txtEntrada.setRows(5);
        jScrollPane1.setViewportView(txtEntrada);

        btnAnalisar.setText("Analisar");
        btnAnalisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalisarActionPerformed(evt);
            }
        });

        btnGerar.setText("Selecionar Fonte");
        btnGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Saída");

        txtSaida.setColumns(20);
        txtSaida.setRows(5);
        jScrollPane2.setViewportView(txtSaida);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Entrada");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAnalisar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(btnGerar)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAnalisar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void executar() throws Exception {
        int cont = 0;
        int coluna =1 ;
        String expr;
        //jText = textArea1;

        AnalisadorLexico lexical = new AnalisadorLexico(new StringReader(textoFonte));
        String resultado = "";

          while (true) {
            Token token = lexical.yylex();
            if (token == null) {
                System.out.println(resultado);
                txtSaida.setText(resultado);

                return;
            }
            switch (token) {

                case OPERADOR_ARITMETICO:
                    
                    resultado = resultado + "Linha: " + cont + " <Operador_Aritmético> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;

                case OPERADOR_LOGICO:
                    //cont ++;
                    resultado = resultado + "Linha: " + cont + " <Operador_Lógico> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;

                case ATRIBUICAO:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Operador_Atribuição> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case FIM_COMANDO:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Fim_Programa> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case OPERADOR_RELACIONAL:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Operador_Relacional> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;

                case COMENTARIO:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Comentario> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;

                case LINHA:
                    cont++;
                    coluna=1;
                    break;

                case ERROR:
                    //cont ++;                    
                    resultado = resultado + "Erro na linha " + cont + ": Símbolo não reconhecido"+lexical.lexeme.toString()+ " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;

                case ID:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <ID> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;

                case NUMEROS_REIAS:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Numeros_reais> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case TEXTO:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Texto> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case THEN:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Então> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case WHILE:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Laço> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case FOR:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Laço> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case IF:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Condicional> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case ELSE:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Condicional> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case NUMEROS_NATURAIS:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Numero> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case EXPOENTE:
                    //cont ++;
                    resultado = resultado + "Linha: " + cont + " <Expoente> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case CHAVE_INICIO:
                    //cont++;
                    resultado = resultado + "Linha: " + cont + " <Chave_Inicio> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                 case BRANCO:
                    coluna++;
                     
                    break;
                case CHAVE_FIM:
                    //cont ++;
                    resultado = resultado + "Linha: " + cont + " <Chave_Fim> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case FIM_LINHA:
                    //cont ++;
                    resultado = resultado + "Linha: " + cont + " <Fim_linha> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case INICIO:
                    //cont ++;
                    resultado = resultado + "Linha: " + cont + " <Inicio_Programa> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case PARENTESES_INICIO:
                    //cont ++;
                    resultado = resultado + "Linha: " + cont + " <Parenteses_Inicio> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                case PARENTESES_FIM:
                    //cont ++;
                    resultado = resultado + "Linha: " + cont + " <Parenteses_Fim> " + lexical.lexeme + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
                default:
                    //cont ++;
                    resultado = resultado + "Linha: " + cont + " <" + lexical.lexeme + "> " + " Coluna "+ coluna+"\n";
                    coluna+=lexical.lexeme.length();
                    break;
            }
        }

    }

    private void btnGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarActionPerformed
        file = new JFileChooser();
        JFileChooser arquivoFonteCaminho = null;
        txtEntrada.setEnabled(false);
        txtEntrada.setText("");
        txtSaida.setText("");
        textoFonte="";
        //jflex.Main.generate(file.getSelectedFile());
        int op = JOptionPane.showConfirmDialog(rootPane, "Gostaria de informar um arquivo?");
        switch (op) {
            case 0:
                arquivoFonteCaminho = new JFileChooser();
                arquivoFonteCaminho.setFileSelectionMode(JFileChooser.FILES_ONLY);
                arquivoFonteCaminho.setFileFilter(new FileNameExtensionFilter("prl", "prl"));
                int i = arquivoFonteCaminho.showSaveDialog(null);
                textoFonte = retornaArquivoLido(arquivoFonteCaminho.getSelectedFile());
                break;

            case 1:

                txtEntrada.setEnabled(true);

                break;
        }
        btnAnalisar.setEnabled(true);

    }//GEN-LAST:event_btnGerarActionPerformed

    private void btnAnalisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalisarActionPerformed
        if (txtEntrada.isEnabled()) {
            textoFonte = txtEntrada.getText();
        }
        System.out.println(textoFonte);

        try {
            executar();
        } catch (Exception ex) {
            Logger.getLogger(TelaGerador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnalisarActionPerformed

    private String retornaArquivoLido(File caminho) {
        String texto = "";
        try {
            BufferedReader br = new BufferedReader(new FileReader(caminho));
            for (String i = br.readLine(); i != null; i = br.readLine()) {
                texto += (i+"\n");
                
            }

            return texto;
        } catch (Exception e) {
            e.printStackTrace();
        }

        return null;
    }

    private javax.swing.JButton btnAnalisar;
    private javax.swing.JButton btnGerar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtEntrada;
    private javax.swing.JTextArea txtSaida;
    // End of variables declaration//GEN-END:variables
}
