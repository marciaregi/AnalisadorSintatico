package br.com.analisadorsintatico.parte3;
import java.io.*;
import java_cup.runtime.*;
import br.com.analisadorsintatico.parte3.Yylex;

parser code 
{:
    public static void main (String args[]) throws Exception {
        new parser (new Yylex(System.in)).parse();
    }

    public String erro;
    
    public String getErro() {
        return erro;
    }

    public void syntax_error (Symbol s) {
        erro = ("Erro de sintaxe. Linha: " + (s.right + 1) +
        " Coluna: " + s.left + ". Texto: \"" + s.value + "\"");

        System.out.print(erro);
    }
:};

terminal  ID, OPERADOR_ARITMETICO, NUMEROS_NATURAIS, TEXTO,
    NUMEROS_REIAS, OPERADOR_LOGICO, OPERADOR_RELACIONAL,
    CHAVE_INICIO, CHAVE_FIM, ATRIBUICAO, RESERVADO_THEN, RESERVADO_IF, 
    LINHA, ERROR, FIM_COMANDO, BRANCO,  
    EXPOENTE,FIM_LINHA, INICIO_COMANDO, PARENTESES_INICIO, PARENTESES_FIM, 
    RESERVADO_INICIO, RESERVADO_FIM, TIPO_NUMERICO, TIPO

non terminal s, if ,else, while, tipo_geral, tipo_declaracao, tipo_atribuicao_numero, 
tipo_atribuicao_numero_reais, expressao_relacional, expressao, expressao_repete,
op_relacional, op_atribuicao, op_atribuicao, tipo_atribuicao, numero_id, 
op_logico;


s ::= expressao_repete;

if ::= RESERVADO_IF PARENTESES_INICIO expressao_relacional PARENTESES_FIM  RESERVADO_THEN CHAVE_INICIO expressao_repete CHAVE_FIM;

else ::= if | if RESERVADO_ELSE CHAVE_INICIO expressao_repete CHAVE_FIM;

while ::= RESERVADO_WHILE PARENTESES_INICIO op_logico PARENTESES_FIM CHAVE_INICIO expressao_repete CHAVE_FIM;

op_logico ::= expressao_relacional | expressao_relacional OPERADOR_LOGICO op_logico | expressao_relacional OPERADOR_LOGICO;

tipo_geral ::= TIPO;

TIPO_DECLARACAO ::= tipo_geral ID;

tipo_atribuicao ::= tipo_declaracao FIM_LINHA;

tipo_atribuicao ::= tipo_declaracao ATRIBUICAO NUMERO|NUMERO_REAIS FIM_LINHA;

tipo_atribuicao ::= tipo_declaracaoO ATRIBUICAO ID FIM_LINHA;

tipo_atribuicao ::= tipo_declaracao ATRIBUICAO ID  FIM_LINHA;

tipo_atribuicao_numero ::= TIPO_NUMERICO ID ATRIBUICAO NUMEROS_NATURAIS FIM_LINHA;

tipo_atribuicao_numero_reais ::= TIPO_NUMERICO ID ATRIBUICAO NUMEROS_REAIS FIM_LINHA;

op_relacional ::= OPERADOR_RELACIONAL;

op_atribuicao ::= OPERADOR_ATRIBUICAO | OPERADOR_ATRIBUICAO_IGUAL;

expressao ::= tipo_atribuicao expressao_repete;

expressao ::= while expressao_repete;

expressao ::= else expressao_repete;

expressao ::= expressao_ATRIBUICAO expressao_repete;

expressao_relacional ::= ID op_relacional ID;

expressao_relacional ::= ID op_relacional NUMEROS_NATURAIS;

expressao_relacional ::= ID op_relacional NUMEROS_REAIS;

expressao_relacional ::= NUMEROS_NATURAIS OPERADOR_RELACIONAL ID;

expressao_relacional ::= NUMEROS_REAIS OPERADOR_RELACIONAL ID;

expressao_ATRIBUICAO ::= ID op_atribuicao ID FIM_LINHA;

expressao_ATRIBUICAO ::= ID op_atribuicao NUMEROS_NATURAIS FIM_LINHA;

expressao_ATRIBUICAO ::= ID op_atribuicao NUMEROS_REAIS FIM_LINHA;

expressao_ATRIBUICAO ::= ID op_atribuicao ID OPERADOR_ARITMETICO ID FIM_LINHA;

expressao_ATRIBUICAO ::= ID op_atribuicao NUMEROS_NATURAIS OPERADOR_ARITMETICO ID FIM_LINHA;

expressao_ATRIBUICAO ::= ID op_atribuicao NUMEROS_REAIS OPERADOR_ARITMETICO ID FIM_LINHA;

expressao_ATRIBUICAO ::= ID op_atribuicao NUMEROS_NATURAIS OPERADOR_ARITMETICO NUMEROS_NATURAIS FIM_LINHA;

expressao_ATRIBUICAO ::= ID op_atribuicao NUMEROS_REAIS OPERADOR_ARITMETICO NUMEROS_REAIS FIM_LINHA;

expressao_ATRIBUICAO ::= ID op_atribuicao ID OPERADOR_ARITMETICO NUMEROS_REAIS FIM_LINHA;

expressao_ATRIBUICAO ::= ID op_atribuicao ID OPERADOR_ARITMETICO NUMERO_NATURAIS FIM_LINHA;

expressao_repete ::= expressao |; 